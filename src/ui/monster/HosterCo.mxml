<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:monster="ui.monster.*" creationComplete="group1_creationCompleteHandler(event)" xmlns:local="*" xmlns:ui="ui.*">
	<fx:Script>
		<![CDATA[
			import base.TiConvertValueToArray;
			import base.TiHost;
			
			import event.TiBattleEvent;
			
			import mx.events.FlexEvent;
			private var m_mcHost:TiHost
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			public function fnShowToStage():void
			{
				m_mcHost =new Host();
				m_mcHost.addEventListener(TiBattleEvent.HOST_INIT_FINISH_EVENT,fnHostAddtoStage);
				mcHostGP.addElement(m_mcHost);
				
			}
			private function fnHostAddtoStage(e:TiBattleEvent):void
			{
				m_mcHost.addEventListener(TiBattleEvent.HOST_DIE_FINISH_EVENT,fnHostDieHandler);
				m_mcHost.addEventListener(TiBattleEvent.HOST_HIT_MONSTER_EVENT,fnHostHitMonsterHandler);
				m_mcHost.addEventListener(TiBattleEvent.HOST_ATTACT_FINISH_EVENT,fnHostAttackFinishHandler);
				m_mcHost.addEventListener(TiBattleEvent.SHOW_HOST_LIFE_EVENT,fnUpdateHostLife);
				m_mcHost.fnShowToStage()
				
				lifePoint.fnInitLife(m_mcHost.m_nBlood,false)
			}
			public function fnAttack():void
			{
				m_mcHost.fnAttack()
			}
			
			private function fnHostHitMonsterHandler(e:TiBattleEvent):void
			{
				var ev:TiBattleEvent =new TiBattleEvent(TiBattleEvent.HOST_HIT_MONSTER_EVENT)
					dispatchEvent(ev);
			}
			
			private function fnHostAttackFinishHandler(e:TiBattleEvent):void
			{
				var ev:TiBattleEvent =new TiBattleEvent(TiBattleEvent.HOST_ATTACT_FINISH_EVENT)
					dispatchEvent(ev);
			}
			public function fnSuffer(nValue:int):void
			{
				m_mcHost.fnSufferValue(nValue)
				mcScore.fnScore(nValue);
			}
			public function fnHit():void
			{
				m_mcHost.fnHit()
			}
			
			private function fnUpdateHostLife(e:TiBattleEvent):void
			{
				lifePoint.fnShowLife(m_mcHost.m_nBlood);
			}
			
			public function fnMonsterAttackFinish():void
			{
				m_mcHost.fnMonsterAttackFinish()
				mcScore.fnShowDamageScore();
			}
			
			public function fnMonsterDieLifeHill(nPoint:int):void
			{
				m_mcHost.fnMonsterDieLifeHill(nPoint);
				lifePoint.fnShowLife(m_mcHost.m_nBlood);
				fnLifeHillPoint(nPoint)
			}
			
			private function fnLifeHillPoint(nPoint:int):void
			{
				mcLifeHill.gotoAndStop(1);
				var arLife:Array = TiConvertValueToArray.fnConvertValueToArray(nPoint);
				for(var i:int = 0 ;; i++)
				{
					if(mcLifeHill.score_point["score"+ (i+1)])
					{
						if(i<arLife.length)
						{
							mcLifeHill.score_point["score"+ (i+1)].gotoAndStop(int(arLife[i])+1);
							mcLifeHill.score_point["score"+ (i+1)].visible = true;
						}
						else
						{
							mcLifeHill.score_point["score"+ (i+1)].visible = false;
						}
					}
					else
					{
						break;
					}
				}
				mcLifeHill.gotoAndPlay(2);
				mcLifeHill.visible = true;
			}
			
			private function fnHostDieHandler(e:Event):void
			{
				var ev:TiBattleEvent =new TiBattleEvent(TiBattleEvent.HOST_DIE_FINISH_EVENT)
					dispatchEvent(ev);
			}
			
			public function fnClearHost():void
			{
				mcHostGP.removeAllElements();
				m_mcHost =null;
				lifePoint.fnResetLife();
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Group id="mcHostGP" x="0" y="0"/>
	<ui:LifePoint_Left id="lifePoint" x="0" y="0"/>
	<ui:ScoreCo id="mcScore" x="137" y="400"/>
	<local:life_hill_point id="mcLifeHill" x="0" y="0" visible="false"/>
</s:Group>
