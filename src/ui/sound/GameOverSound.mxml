<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:local="*" creationComplete="group1_creationCompleteHandler(event)" xmlns:components="util.fx.components.*">
	<fx:Script>
		<![CDATA[
			import handler.TiMusicConfig;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
		
			private var m_soundCollection:ArrayCollection
			private var m_soundLoader:ArrayCollection
			private var m_SoundChannel:SoundChannel
			private var m_sound:Sound;
			private var m_bIsPlaying:Boolean = false;
			private var m_nPosition:int;
			private var m_nSelectedSound:int=0;
			private var m_bMute:Boolean=false;
			private var m_bLoop:Boolean
			private var m_bRandom:Boolean
			protected function group1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				m_soundCollection=new ArrayCollection();
				m_soundCollection.addItem({url:TiMusicConfig.SOUND_GAMEOVER});
				m_soundLoader=new ArrayCollection();
				
			}
			
			public function fnSoundDownLoad(e:Event=null):void
			{
				
				m_sound=new Sound();
				if(!m_soundCollection)
				{
					return;
				}
				var request:URLRequest= new URLRequest(m_soundCollection[m_nSelectedSound].url);
				m_sound.load(request);
				m_sound.addEventListener( IOErrorEvent.IO_ERROR, handleIOErr );
				m_sound.addEventListener(Event.COMPLETE,fnDownloadSoundComplete)
			}
			private function handleIOErr( event: IOErrorEvent ): void
			{
				trace("sound IO error:"+ event.currentTarget)
				fnBtnSoundNext();
			}
			
			private function fnDownloadSoundComplete(e:Event):void
			{
				//var key:String= m_soundCollection[m_nSelectedSound].name
				//var url:String=	m_soundCollection[m_nSelectedSound].url;
				m_soundLoader.addItem(e.currentTarget);
				if(m_nSelectedSound<m_soundCollection.length-1)
				{
					m_nSelectedSound++
						fnSoundDownLoad();
				}
				else
				{
					fnDownloadComplete();
				}
				
			}
			
			private function fnDownloadComplete():void
			{
				m_nSelectedSound=0;
				fnBtnSoundPlay();
			}
			private function fnBtnSoundPlay(e:MouseEvent=null):void
			{
				if(m_SoundChannel)
				{
					m_SoundChannel.stop();
					m_SoundChannel=null
				}
				
				m_sound=null;
				m_sound=new Sound();
				
				/* var request:URLRequest = new URLRequest(m_soundCollection[m_nSelectedSound].url);
				m_sound.load(request);
				m_sound.addEventListener( IOErrorEvent.IO_ERROR, handleIOErr ); */
				m_sound=m_soundLoader[m_nSelectedSound]
				
				if(m_nPosition!=0)
				{
					m_SoundChannel = m_sound.play(m_nPosition);
				}
				else
				{
					m_SoundChannel=m_sound.play();
				//	mcSoundControlPanel.Txt_MusicName.text=m_soundCollection[m_nSelectedSound].name;
					m_SoundChannel.addEventListener(Event.SOUND_COMPLETE, fnSoundEnd); 
					
				}
				if(m_bMute==true)
				{
					m_SoundChannel.soundTransform=new SoundTransform(0)
				}
				else
				{
					m_SoundChannel.soundTransform=new SoundTransform(1)
				}
				
				m_bIsPlaying=true;
				
			}
			
			private  function fnSoundEnd(event:Event):void 
			{ 
				if(m_bLoop)
				{
					fnBtnSoundPlay();
				}
				else if(m_bRandom)
				{
					m_nSelectedSound=Math.round(Math.random()*(m_soundCollection.length-1));
					m_nPosition=0
					fnBtnSoundPlay();
				}
				else
				{
					fnBtnSoundNext();
				}
				
			}
			private function fnBtnSoundNext(e:MouseEvent=null):void
			{
				if(m_nSelectedSound==m_soundCollection.length-1)
				{
					m_nSelectedSound=0;
				}
				else
				{
					m_nSelectedSound++;
				}
				m_nPosition=0
				fnBtnSoundPlay();
			}
			private function fnBGMHandler(e:MouseEvent):void
			{
				if(m_SoundChannel)
				{
						
						if(m_bMute==true)
						{
							return;
						}
						m_SoundChannel.soundTransform=new SoundTransform(1)
				
					
				}
			}
			
			public function fnStopMusic():void
			{
				if(m_SoundChannel)
				{
					m_SoundChannel.stop();
					m_SoundChannel=null
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
</s:Group>
